
- proxy class
- pipes: how to support colours? escape sequences?
- improved help support?
- autorun dir
- /etc
- encryption?
- write and print not using io.write? make io.write use term?
- get rid of word wrapping in write?
- unit test suite
- switch to guaranteed unique message and rpc ids

emulator:
- get rid of _G hacks in usr/startup

net:
- dhcp?

libraries:
- stdlib?
- oo: operators
- oo: multiple inheritance
- persistent data
- vfs: disk.getMountPath?
- vfs: does fs.find work?
- ui: needs much work
- event: event class?
- nt: replace turtle?
- cl: integrate help api

filesystems:
- github?
- tmpfs?
- etc/exports for nfsd?

commands:
- ps
- kill
- ls with -l
- grep
- host
- web browser
- telnet: multishell?
- better help command?
- more: keybindings
- find
- head
- tail

boot:
- bios: os.run({}, "shell")
- shell: shell.run("rom/startup"), shell.run(command line arg) or shell.run(entered commands)
- rom/startup: shell.run("startup")
- startup: shell.run("usr/startup")

- shell.run does an os.run with new env
- os.run will import into env provided from _G
- os.loadAPI does a loadfile with new env then inserts into _G

